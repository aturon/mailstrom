var searchIndex = {};
searchIndex["mailstrom"] = {"doc":"Mailstrom handles email delivery.","items":[[3,"MemoryStorage","mailstrom","",null,null],[3,"Config","","",null,null],[12,"helo_name","","",0,null],[3,"Mailstrom","","",null,null],[4,"WorkerStatus","","",null,null],[13,"Ok","","",1,null],[13,"Terminated","","",1,null],[13,"ChannelDisconnected","","",1,null],[13,"LockPoisoned","","",1,null],[13,"StorageWriteFailed","","",1,null],[13,"Unknown","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"from_u8","","",1,{"inputs":[{"name":"u8"}],"output":{"name":"workerstatus"}}],[0,"error","","",null,null],[4,"Error","mailstrom::error","",null,null],[13,"Send","","",2,null],[13,"EmailParser","","",2,null],[13,"Storage","","",2,null],[13,"DnsUnavailable","","",2,null],[13,"Resolver","","",2,null],[13,"Lock","","",2,null],[11,"fmt","","",2,null],[11,"from","","",2,{"inputs":[{"name":"senderror"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"s"}],"output":{"name":"error"}}],[11,"from","","",2,{"inputs":[{"name":"resolverror"}],"output":{"name":"error"}}],[0,"internal_status","mailstrom","This is exposed for implementers of `MailstromStorage` but otherwise should not\nbe needed by users of this library.",null,null],[3,"Recipient","mailstrom::internal_status","Information about the recipients of an email to be sent",null,null],[12,"email_addr","","The recipient&#39;s email address",3,null],[12,"domain","","The domain parsed off of the recipients email address",3,null],[12,"mx_servers","","The MX servers for the domain, in order of delivery preference.\nIf this is None, they have not been determined yet (DNS lookups take time).",3,null],[12,"current_mx","","The index into the MX server we are currently trying next",3,null],[12,"result","","The delivery result (so far) for this recipient",3,null],[3,"InternalStatus","","An email to be sent (internal format).  This is exposed publicly for\nimplementers of `MailstromStorage`",null,null],[12,"message_id","","The parsed-out (or generated) message ID",4,null],[12,"recipients","","The parsed-out list of recipients, and the state each is in.  If this\nis None, then the recipient information has not been determined yet\n(MX record lookups take some time).",4,null],[12,"delivered_to_mx","","The MX servers which we have successfully delivered to.  We keep\nthis as a separate list so we can more easily detect the situation\nwhere multiple recipients deliveries go to the same MX",4,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"create","","",4,{"inputs":[{"name":"email"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_status","","",4,null],[11,"new","mailstrom","",5,{"inputs":[],"output":{"name":"memorystorage"}}],[11,"store","","",5,null],[11,"update_status","","",5,null],[11,"retrieve","","",5,null],[11,"retrieve_status","","",5,null],[0,"status","","",null,null],[3,"RecipientStatus","mailstrom::status","",null,null],[12,"recipient","","",6,null],[12,"result","","",6,null],[3,"Status","","",null,null],[12,"message_id","","",7,null],[12,"recipient_status","","",7,null],[4,"DeliveryResult","","The result (so far) of the sending of an email to a particular recipient",null,null],[13,"Queued","","Mail is queued to be sent, but no attempt has yet been made to send. This state should\nbe moved through rather quickly.",8,null],[13,"Deferred","","Mail sending has been deferred due to a transient error. Number of attempts and Error\nare included.",8,null],[13,"Delivered","","Mail has been sent. Delivery response included.",8,null],[13,"Failed","","Mail sending has failed due to a permanent error. Error is included.",8,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"fmt","","",6,null],[11,"fmt","","",7,null],[11,"succeeded","","",7,null],[11,"completed","","",7,null],[8,"MailstromStorage","mailstrom","A trait for implementing Mailstrom storage",null,null],[16,"Error","","",9,null],[10,"store","","Store an `Email`.  This should overwrite if message-id matches an existing email.",9,null],[10,"update_status","","Update the status of an email",9,null],[10,"retrieve","","Retrieve an `Email` and `InternalStatus` based on the message_id",9,null],[10,"retrieve_status","","Retrieve an `InternalStatus` based on the message_id",9,null],[8,"MailstromStorageError","","",null,null],[11,"new","","Create a new Mailstrom instance for sending emails.",10,{"inputs":[{"name":"config"},{"name":"s"}],"output":{"name":"mailstrom"}}],[11,"die","","Ask Mailstrom to die.  This is not required, you can simply let it fall out\nof scope and it will clean itself up.",10,null],[11,"worker_status","","Determine the status of the worker",10,null],[11,"send_email","","Send an email, getting back it&#39;s message-id",10,null],[11,"query_status","","",10,null],[11,"drop","","",10,null]],"paths":[[3,"Config"],[4,"WorkerStatus"],[4,"Error"],[3,"Recipient"],[3,"InternalStatus"],[3,"MemoryStorage"],[3,"RecipientStatus"],[3,"Status"],[4,"DeliveryResult"],[8,"MailstromStorage"],[3,"Mailstrom"]]};
initSearch(searchIndex);
